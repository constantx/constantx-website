---
import type { CollectionEntry } from 'astro:content';
import { getCollection, getEntry, render } from 'astro:content';

import Cell from '@/components/Cell.astro';
import GridContainer from '@/components/GridContainer.astro';
import RecentThoughts from '@/components/RecentThoughts.astro';
import Layout from '@/layouts/MainLayout.astro';

type Props = CollectionEntry<'pages'>;
type BlogPost = CollectionEntry<'thoughts'>;

const thoughts = (await getCollection('thoughts') as unknown as BlogPost[])
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.publishedAt.valueOf() - a.data.publishedAt.valueOf());

const page = await getEntry('pages', 'home');
if (!page) {
  // Handle Error, for example:
  throw new Error('Could not render home page');
}
const { Content } = await render(page);
const { 
  title,
} = page.data as Props['data'];
---
<Layout title={title}>
  <div class="flex flex-col">
    <div class="flex-1">
      <GridContainer>
        <Cell class="col-span-5 md:col-span-4 lg:col-[2_/_span_3] xl:col-[2_/_span_3] 2xl:col-[2_/_span_2] prose grid grid-cols-1 gap-4 text-pretty">
          <Content />
        </Cell>

        { thoughts.length > 0 && (
          <Cell class="col-span-full md:col-[span_2_/_-1] 2xl:col-[span_3_/_-1]">
            <RecentThoughts thoughts={thoughts} />
          </Cell>
        )}
      </GridContainer>
    </div>
  </div>
</Layout>

<style>
/*   :root {
    --overlay-gradient: linear-gradient(180deg, rgba(0, 0, 0, 0.8) 70%, rgba(0, 0, 0, 1) 100%);
  }
  body {
    background: 
      var(--overlay-gradient),
      url('/images/cover.jpg') top center / cover no-repeat;
  }
  @media  (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { 
    body {
      background: 
        var(--overlay-gradient),
        url('/images/cover@2x.jpg') top center / cover no-repeat;
    }
  } */
  
  /* Keep the wander animation in CSS since it's complex to do in Tailwind */
	body::after {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    content: "";
		display: block;
		width: 100%;
		height: 1px;
		background: var(--color-brand);
		animation: wander 60s linear infinite;
    z-index: 9999;
	}

  @keyframes wander {
		0% {
			transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translate3d(0, 0, 0) scale(1);
		}
		15% {
			transform: rotateX(180deg) rotateY(90deg) rotateZ(45deg) translate3d(30vw, -20vh, 100px) scale(1.5);
		}
		30% {
			transform: rotateX(-90deg) rotateY(270deg) rotateZ(180deg) translate3d(-25vw, 40vh, -50px) scale(0.7);
		}
		45% {
			transform: rotateX(270deg) rotateY(180deg) rotateZ(-90deg) translate3d(50vw, -30vh, 200px) scale(2);
		}
		60% {
			transform: rotateX(120deg) rotateY(-45deg) rotateZ(270deg) translate3d(-40vw, 25vh, -100px) scale(0.5);
		}
		75% {
			transform: rotateX(-180deg) rotateY(360deg) rotateZ(135deg) translate3d(35vw, -45vh, 150px) scale(1.3);
		}
		90% {
			transform: rotateX(45deg) rotateY(-270deg) rotateZ(-180deg) translate3d(-30vw, 35vh, -75px) scale(0.8);
		}
		100% {
			transform: rotateX(360deg) rotateY(720deg) rotateZ(-360deg) translate3d(0, 0, 0) scale(1);
		}
	}
</style>

